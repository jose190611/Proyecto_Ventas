<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PtbImg.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>